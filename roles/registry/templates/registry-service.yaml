version: '3'

networks:
  traefik-public:
    external: true

services:
  registry:
    image: registry:2.7
    volumes:
      - {{ stack_path }}/registry/data:/var/lib/registry
      - {{ stack_path }}/registry/config/htpasswd:/auth/htpasswd
    environment:
      - "REGISTRY_AUTH=htpasswd"
      - "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm"
      - "REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd"
      - "REGISTRY_STORAGE_DELETE_ENABLED=true"
    networks:
      - traefik-public
    deploy: 
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.registry.rule=Host(`{{ registry_name }}.{{ stack_domain }}`)
        - 'traefik.http.routers.registry.service=registry-service'
        - 'traefik.http.services.registry-service.loadbalancer.server.port=5000' 
{% if acme_email != "" %}      
        - traefik.http.routers.registry.entrypoints=websecure
        - traefik.http.routers.registry.tls=true
        - traefik.http.routers.registry.tls.certresolver=letsencryptresolver
{% else %}
        - 'traefik.http.routers.registry.entrypoints=web'
{% endif %}



  ui:
    image: parabuzzle/craneoperator:2.2.5
    environment:
      - "REGISTRY_HOST=docker-registry_registry"
      - "REGISTRY_PORT=5000"
      - "REGISTRY_PROTOCOL=http"
      - "REGISTRY_PUBLIC_URL={{ registry_ui_name }}.{{ stack_domain }}"
      - "ALLOW_REGISTRY_LOGIN=true"
      - "REGISTRY_USERNAME={{ registry_username }}"
      - "REGISTRY_PASSWORD={{ registry_pwd }}"
      - "TITLE={{ registry_title }}"
      - "REGISTRY_ALLOW_DELETE=true"
    depends_on:
      - registry
    networks:
      - traefik-public
    deploy: 
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.registryui.rule=Host(`{{ registry_ui_name }}.{{ stack_domain }}`)
        - 'traefik.http.routers.registryui.service=registryui-service'
        - 'traefik.http.services.registryui-service.loadbalancer.server.port=80' 
{% if acme_email != "" %}      
        - traefik.http.routers.registryui.entrypoints=websecure
        - traefik.http.routers.registryui.tls=true
        - traefik.http.routers.registryui.tls.certresolver=letsencryptresolver
{% else %}
        - 'traefik.http.routers.registryui.entrypoints=web'
{% endif %}